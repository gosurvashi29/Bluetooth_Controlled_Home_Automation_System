
home automation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000172  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000172  000001e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000082  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000936  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000965  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000247  00000000  00000000  000009a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000017e  00000000  00000000  00000bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000236  00000000  00000000  00000d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  00000fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000164  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020e  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001382  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0f d0       	rcall	.+30     	; 0x52 <main>
  34:	9c c0       	rjmp	.+312    	; 0x16e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <_Z10usart_initv>:



void usart_init()
{
	UCSRB =(1<<RXEN) | (1<<TXEN);
  38:	88 e1       	ldi	r24, 0x18	; 24
  3a:	8a b9       	out	0x0a, r24	; 10
	UCSRC =(1<<URSEL) | (1<<USBS) | (1<<UCSZ1) | (1<<UCSZ0);
  3c:	8e e8       	ldi	r24, 0x8E	; 142
  3e:	80 bd       	out	0x20, r24	; 32
	UBRRL=PS;
  40:	83 e3       	ldi	r24, 0x33	; 51
  42:	89 b9       	out	0x09, r24	; 9
	UBRRH=(PS>>8);
  44:	10 bc       	out	0x20, r1	; 32
  46:	08 95       	ret

00000048 <_Z8usart_rxv>:
	}
}

unsigned int usart_rx()
{
	while((UCSRA & 0x80)==0);
  48:	5f 9b       	sbis	0x0b, 7	; 11
  4a:	fe cf       	rjmp	.-4      	; 0x48 <_Z8usart_rxv>
	return UDR;
  4c:	8c b1       	in	r24, 0x0c	; 12
}
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	08 95       	ret

00000052 <main>:

int main()
{
	usart_init();
  52:	f2 df       	rcall	.-28     	; 0x38 <_Z10usart_initv>
	DDRB=0XFF;
  54:	8f ef       	ldi	r24, 0xFF	; 255
  56:	87 bb       	out	0x17, r24	; 23
	int i=0;
	int j=0;
	int k=0;
	int l=0;
  58:	c1 2c       	mov	r12, r1
  5a:	d1 2c       	mov	r13, r1
{
	usart_init();
	DDRB=0XFF;
	int i=0;
	int j=0;
	int k=0;
  5c:	e1 2c       	mov	r14, r1
  5e:	f1 2c       	mov	r15, r1
int main()
{
	usart_init();
	DDRB=0XFF;
	int i=0;
	int j=0;
  60:	00 e0       	ldi	r16, 0x00	; 0
  62:	10 e0       	ldi	r17, 0x00	; 0

int main()
{
	usart_init();
	DDRB=0XFF;
	int i=0;
  64:	c0 e0       	ldi	r28, 0x00	; 0
  66:	d0 e0       	ldi	r29, 0x00	; 0
	
		if ( c== 'q')
		 {
			if (i==0)
			{
				i=1;
  68:	aa 24       	eor	r10, r10
  6a:	a3 94       	inc	r10
  6c:	b1 2c       	mov	r11, r1
			}
			else if (i==1)
			{
				i=0;
  6e:	81 2c       	mov	r8, r1
  70:	91 2c       	mov	r9, r1
  72:	03 c0       	rjmp	.+6      	; 0x7a <main+0x28>
			{
			
								
			 if (l==0)
			 {
				 l=1;
  74:	65 01       	movw	r12, r10
  76:	01 c0       	rjmp	.+2      	; 0x7a <main+0x28>
			 }
			 else if (l==1)
			 {
				 l=0;
  78:	64 01       	movw	r12, r8
	int j=0;
	int k=0;
	int l=0;
	while(1)
	{
		char c= usart_rx();
  7a:	e6 df       	rcall	.-52     	; 0x48 <_Z8usart_rxv>
		 if((c=='F') && (i==0))
  7c:	86 34       	cpi	r24, 0x46	; 70
  7e:	39 f4       	brne	.+14     	; 0x8e <main+0x3c>
  80:	20 97       	sbiw	r28, 0x00	; 0
  82:	09 f0       	breq	.+2      	; 0x86 <main+0x34>
  84:	4b c0       	rjmp	.+150    	; 0x11c <main+0xca>
		{
			//PORTB=0b00000100;	
			PORTB= (PORTB)|(0b00000100);
  86:	c2 9a       	sbi	0x18, 2	; 24
  88:	54 c0       	rjmp	.+168    	; 0x132 <main+0xe0>
			
		}
          if((c=='F') && (i==1))
       	{
	        //PORTB=0b00000100;
	       	PORTB= (PORTB)& (0b11111011);
  8a:	c2 98       	cbi	0x18, 2	; 24
  8c:	52 c0       	rjmp	.+164    	; 0x132 <main+0xe0>
	       
		   }	
		 if((c=='B') && (j==0))
  8e:	82 34       	cpi	r24, 0x42	; 66
  90:	09 f0       	breq	.+2      	; 0x94 <main+0x42>
  92:	4c c0       	rjmp	.+152    	; 0x12c <main+0xda>
  94:	01 15       	cp	r16, r1
  96:	11 05       	cpc	r17, r1
  98:	09 f0       	breq	.+2      	; 0x9c <main+0x4a>
  9a:	44 c0       	rjmp	.+136    	; 0x124 <main+0xd2>
		{
			PORTB=(PORTB)|(0b00001000);
  9c:	c3 9a       	sbi	0x18, 3	; 24
  9e:	52 c0       	rjmp	.+164    	; 0x144 <main+0xf2>
		}
		
		if((c=='B') && (j==1))
		{
			
			PORTB=(PORTB)&(0b11110111);
  a0:	c3 98       	cbi	0x18, 3	; 24
  a2:	50 c0       	rjmp	.+160    	; 0x144 <main+0xf2>
		if((PINC ==0b00000010) && (l==1))
		{
			PORTB=(PORTB)&(0b11111101); 
			l=0;
		}*/
		if((c=='R') && (k==0))
  a4:	e1 14       	cp	r14, r1
  a6:	f1 04       	cpc	r15, r1
  a8:	09 f0       	breq	.+2      	; 0xac <main+0x5a>
  aa:	47 c0       	rjmp	.+142    	; 0x13a <main+0xe8>
		{
			PORTB=(PORTB)|(0b00000001);
  ac:	c0 9a       	sbi	0x18, 0	; 24
  ae:	0c c0       	rjmp	.+24     	; 0xc8 <main+0x76>
		}
		
		if((c=='R') && (k==1))
		{
			
			PORTB=(PORTB)&(0b11111110);
  b0:	c0 98       	cbi	0x18, 0	; 24
  b2:	0a c0       	rjmp	.+20     	; 0xc8 <main+0x76>
		}

		if((c=='L') && (l==0))
  b4:	c1 14       	cp	r12, r1
  b6:	d1 04       	cpc	r13, r1
  b8:	09 f0       	breq	.+2      	; 0xbc <main+0x6a>
  ba:	48 c0       	rjmp	.+144    	; 0x14c <main+0xfa>
		{
			PORTB=(PORTB)|(0b00000010);
  bc:	c1 9a       	sbi	0x18, 1	; 24
  be:	0d c0       	rjmp	.+26     	; 0xda <main+0x88>
		}
		
		if((c=='L') && (l==1))
		{
			PORTB=(PORTB)&(0b11111101);
  c0:	c1 98       	cbi	0x18, 1	; 24
  c2:	0b c0       	rjmp	.+22     	; 0xda <main+0x88>
		}
		if(c=='S')
		{
			PORTB=0b00000000;
  c4:	18 ba       	out	0x18, r1	; 24
  c6:	12 c0       	rjmp	.+36     	; 0xec <main+0x9a>
		}
	
		if ( c== 'q')
  c8:	81 37       	cpi	r24, 0x71	; 113
  ca:	39 f4       	brne	.+14     	; 0xda <main+0x88>
		 {
			if (i==0)
  cc:	20 97       	sbiw	r28, 0x00	; 0
  ce:	09 f4       	brne	.+2      	; 0xd2 <main+0x80>
  d0:	42 c0       	rjmp	.+132    	; 0x156 <main+0x104>
			{
				i=1;
			}
			else if (i==1)
  d2:	c1 30       	cpi	r28, 0x01	; 1
  d4:	d1 05       	cpc	r29, r1
  d6:	a9 f4       	brne	.+42     	; 0x102 <main+0xb0>
  d8:	40 c0       	rjmp	.+128    	; 0x15a <main+0x108>
			{
				i=0;
			}
		}
		if ( c== 'y')
  da:	89 37       	cpi	r24, 0x79	; 121
  dc:	39 f4       	brne	.+14     	; 0xec <main+0x9a>
		{
		
			if (j==0)
  de:	01 15       	cp	r16, r1
  e0:	11 05       	cpc	r17, r1
  e2:	e9 f1       	breq	.+122    	; 0x15e <main+0x10c>
			{
				j=1;
			}
			else if (j==1)
  e4:	01 30       	cpi	r16, 0x01	; 1
  e6:	11 05       	cpc	r17, r1
  e8:	41 f6       	brne	.-112    	; 0x7a <main+0x28>
  ea:	3b c0       	rjmp	.+118    	; 0x162 <main+0x110>
			{
				j=0;
			}
			
		}			
		if (c == 'z')
  ec:	8a 37       	cpi	r24, 0x7A	; 122
  ee:	49 f4       	brne	.+18     	; 0x102 <main+0xb0>
			{
			
			if (k==0)
  f0:	e1 14       	cp	r14, r1
  f2:	f1 04       	cpc	r15, r1
  f4:	c1 f1       	breq	.+112    	; 0x166 <main+0x114>
			{
				k=1;
			}
			else if (k==1)
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	e8 16       	cp	r14, r24
  fa:	f1 04       	cpc	r15, r1
  fc:	09 f0       	breq	.+2      	; 0x100 <main+0xae>
  fe:	bd cf       	rjmp	.-134    	; 0x7a <main+0x28>
 100:	34 c0       	rjmp	.+104    	; 0x16a <main+0x118>
			{
				k=0;
			}
			
			}	
			if (c=='t')
 102:	84 37       	cpi	r24, 0x74	; 116
 104:	09 f0       	breq	.+2      	; 0x108 <main+0xb6>
 106:	b9 cf       	rjmp	.-142    	; 0x7a <main+0x28>
			{
			
								
			 if (l==0)
 108:	c1 14       	cp	r12, r1
 10a:	d1 04       	cpc	r13, r1
 10c:	09 f4       	brne	.+2      	; 0x110 <main+0xbe>
 10e:	b2 cf       	rjmp	.-156    	; 0x74 <main+0x22>
			 {
				 l=1;
			 }
			 else if (l==1)
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	c9 16       	cp	r12, r25
 114:	d1 04       	cpc	r13, r1
 116:	09 f0       	breq	.+2      	; 0x11a <main+0xc8>
 118:	b0 cf       	rjmp	.-160    	; 0x7a <main+0x28>
 11a:	ae cf       	rjmp	.-164    	; 0x78 <main+0x26>
		{
			//PORTB=0b00000100;	
			PORTB= (PORTB)|(0b00000100);
			
		}
          if((c=='F') && (i==1))
 11c:	c1 30       	cpi	r28, 0x01	; 1
 11e:	d1 05       	cpc	r29, r1
 120:	41 f4       	brne	.+16     	; 0x132 <main+0xe0>
 122:	b3 cf       	rjmp	.-154    	; 0x8a <main+0x38>
		{
			PORTB=(PORTB)|(0b00001000);
			
		}
		
		if((c=='B') && (j==1))
 124:	01 30       	cpi	r16, 0x01	; 1
 126:	11 05       	cpc	r17, r1
 128:	69 f4       	brne	.+26     	; 0x144 <main+0xf2>
 12a:	ba cf       	rjmp	.-140    	; 0xa0 <main+0x4e>
		if((PINC ==0b00000010) && (l==1))
		{
			PORTB=(PORTB)&(0b11111101); 
			l=0;
		}*/
		if((c=='R') && (k==0))
 12c:	82 35       	cpi	r24, 0x52	; 82
 12e:	09 f4       	brne	.+2      	; 0x132 <main+0xe0>
 130:	b9 cf       	rjmp	.-142    	; 0xa4 <main+0x52>
		{
			
			PORTB=(PORTB)&(0b11111110);
		}

		if((c=='L') && (l==0))
 132:	8c 34       	cpi	r24, 0x4C	; 76
 134:	09 f4       	brne	.+2      	; 0x138 <main+0xe6>
 136:	be cf       	rjmp	.-132    	; 0xb4 <main+0x62>
 138:	05 c0       	rjmp	.+10     	; 0x144 <main+0xf2>
		if((c=='R') && (k==0))
		{
			PORTB=(PORTB)|(0b00000001);
		}
		
		if((c=='R') && (k==1))
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	e9 16       	cp	r14, r25
 13e:	f1 04       	cpc	r15, r1
 140:	19 f6       	brne	.-122    	; 0xc8 <main+0x76>
 142:	b6 cf       	rjmp	.-148    	; 0xb0 <main+0x5e>
		
		if((c=='L') && (l==1))
		{
			PORTB=(PORTB)&(0b11111101);
		}
		if(c=='S')
 144:	83 35       	cpi	r24, 0x53	; 83
 146:	09 f4       	brne	.+2      	; 0x14a <main+0xf8>
 148:	bd cf       	rjmp	.-134    	; 0xc4 <main+0x72>
 14a:	be cf       	rjmp	.-132    	; 0xc8 <main+0x76>
		if((c=='L') && (l==0))
		{
			PORTB=(PORTB)|(0b00000010);
		}
		
		if((c=='L') && (l==1))
 14c:	91 e0       	ldi	r25, 0x01	; 1
 14e:	c9 16       	cp	r12, r25
 150:	d1 04       	cpc	r13, r1
 152:	19 f6       	brne	.-122    	; 0xda <main+0x88>
 154:	b5 cf       	rjmp	.-150    	; 0xc0 <main+0x6e>
	
		if ( c== 'q')
		 {
			if (i==0)
			{
				i=1;
 156:	e5 01       	movw	r28, r10
 158:	d4 cf       	rjmp	.-88     	; 0x102 <main+0xb0>
			}
			else if (i==1)
			{
				i=0;
 15a:	e4 01       	movw	r28, r8
 15c:	d2 cf       	rjmp	.-92     	; 0x102 <main+0xb0>
		if ( c== 'y')
		{
		
			if (j==0)
			{
				j=1;
 15e:	85 01       	movw	r16, r10
 160:	8c cf       	rjmp	.-232    	; 0x7a <main+0x28>
			}
			else if (j==1)
			{
				j=0;
 162:	84 01       	movw	r16, r8
 164:	8a cf       	rjmp	.-236    	; 0x7a <main+0x28>
		if (c == 'z')
			{
			
			if (k==0)
			{
				k=1;
 166:	75 01       	movw	r14, r10
 168:	88 cf       	rjmp	.-240    	; 0x7a <main+0x28>
			}
			else if (k==1)
			{
				k=0;
 16a:	74 01       	movw	r14, r8
 16c:	86 cf       	rjmp	.-244    	; 0x7a <main+0x28>

0000016e <_exit>:
 16e:	f8 94       	cli

00000170 <__stop_program>:
 170:	ff cf       	rjmp	.-2      	; 0x170 <__stop_program>
